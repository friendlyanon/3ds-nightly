--- 3ds-nightly/.ci/linux.sh
+++ 3ds-nightly/.ci/linux.sh
@@ -1,31 +1,15 @@
 #!/bin/bash -ex
 
-if [ "$TARGET" = "appimage" ]; then
-    # Compile the AppImage we distribute with Clang.
-    export EXTRA_CMAKE_FLAGS=(-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_LINKER=/etc/bin/ld.lld)
-else
-    # For the linux-fresh verification target, verify compilation without PCH as well.
-    export EXTRA_CMAKE_FLAGS=(-D@VERBOTEN@_USE_PRECOMPILED_HEADERS=OFF)
-fi
-
 mkdir build && cd build
 cmake .. -G Ninja \
     -DCMAKE_BUILD_TYPE=Release \
-    -DCMAKE_C_COMPILER_LAUNCHER=ccache \
-    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
-    "${EXTRA_CMAKE_FLAGS[@]}" \
+    -DCMAKE_CXX_COMPILER=clang++ \
+    -DCMAKE_C_COMPILER=clang \
+    -DCMAKE_LINKER=/etc/bin/ld.lld \
+    -DENABLE_WEB_SERVICE=0 \
+    -DENABLE_TESTS=0 \
+    -DENABLE_QT_UPDATER=0 \
     -DENABLE_QT_TRANSLATION=ON \
-    -D@VERBOTEN@_ENABLE_COMPATIBILITY_REPORTING=ON \
-    -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON \
     -DUSE_DISCORD_PRESENCE=ON
 ninja
-
-if [ "$TARGET" = "appimage" ]; then
-    ninja bundle
-    # TODO: Our AppImage environment currently uses an older ccache version without the verbose flag.
-    ccache -s
-else
-    ccache -s -v
-fi
-
-ctest -VV -C Release
+ninja bundle
--- 3ds-nightly/.ci/pack.sh
+++ 3ds-nightly/.ci/pack.sh
@@ -1,16 +1,8 @@
 #!/bin/bash -ex
 
 # Determine the full revision name.
-GITDATE="`git show -s --date=short --format='%ad' | sed 's/-//g'`"
-GITREV="`git show -s --format='%h'`"
-REV_NAME="@verboten@-$OS-$TARGET-$GITDATE-$GITREV"
-
-# Determine the name of the release being built.
-if [[ "$GITHUB_REF_NAME" =~ ^canary- ]] || [[ "$GITHUB_REF_NAME" =~ ^nightly- ]]; then
-    RELEASE_NAME=$(echo $GITHUB_REF_NAME | cut -d- -f1)
-else
-    RELEASE_NAME=head
-fi
+REV_NAME="3ds-$OS-$TARGET-20240303-0ff344023"
+RELEASE_NAME=nightly
 
 # Archive and upload the artifacts.
 mkdir artifacts
--- 3ds-nightly/CMakeLists.txt
+++ 3ds-nightly/CMakeLists.txt
@@ -135,7 +135,7 @@
 
 # Sanity check : Check that all submodules are present
 # =======================================================================
-
+if("0")
 function(check_submodules_present)
     file(READ "${PROJECT_SOURCE_DIR}/.gitmodules" gitmodules)
     string(REGEX MATCHALL "path *= *[^ \t\r\n]*" gitmodules ${gitmodules})
@@ -168,7 +168,7 @@
 if (NOT EXISTS ${PROJECT_BINARY_DIR}/dist/compatibility_list/compatibility_list.json)
     file(WRITE ${PROJECT_BINARY_DIR}/dist/compatibility_list/compatibility_list.json "")
 endif()
-
+endif()
 # Detect current compilation architecture and create standard definitions
 # =======================================================================
 
@@ -305,7 +305,7 @@
 # Setup a custom clang-format target (if clang-format can be found) that will run
 # against all the src files. This should be used before making a pull request.
 # =======================================================================
-
+if("0")
 set(CLANG_FORMAT_POSTFIX "-15")
 find_program(CLANG_FORMAT
     NAMES clang-format${CLANG_FORMAT_POSTFIX}
@@ -351,7 +351,7 @@
     unset(SRCS)
     unset(CCOMMENT)
 endif()
-
+endif()
 # Include source code
 # ===================
 
--- 3ds-nightly/.gitmodules
+++ 3ds-nightly/.gitmodules
@@ -1,6 +1,3 @@
-[submodule "boost"]
-    path = externals/boost
-    url = https://github.com/@verboten@-emu/ext-boost.git
 [submodule "nihstro"]
     path = externals/nihstro
     url = https://github.com/neobrain/nihstro.git
@@ -25,18 +22,12 @@
 [submodule "inih"]
     path = externals/inih/inih
     url = https://github.com/benhoyt/inih.git
-[submodule "libressl"]
-    path = externals/libressl
-    url = https://github.com/@verboten@-emu/ext-libressl-portable.git
 [submodule "libusb"]
     path = externals/libusb/libusb
     url = https://github.com/libusb/libusb.git
 [submodule "cubeb"]
     path = externals/cubeb
     url = https://github.com/mozilla/cubeb
-[submodule "discord-rpc"]
-    path = externals/discord-rpc
-    url = https://github.com/@verboten2@-emu/discord-rpc.git
 [submodule "cpp-jwt"]
     path = externals/cpp-jwt
     url = https://github.com/arun11299/cpp-jwt.git
@@ -76,15 +67,9 @@
 [submodule "vulkan-headers"]
     path = externals/vulkan-headers
     url = https://github.com/KhronosGroup/Vulkan-Headers
-[submodule "sirit"]
-    path = externals/sirit
-    url = https://github.com/@verboten2@-emu/sirit
 [submodule "faad2"]
     path = externals/faad2/faad2
     url = https://github.com/knik0/faad2
-[submodule "library-headers"]
-    path = externals/library-headers
-    url = https://github.com/@verboten@-emu/ext-library-headers.git
 [submodule "libadrenotools"]
     path = externals/libadrenotools
     url = https://github.com/bylaws/libadrenotools
--- 3ds-nightly/.ci/windows.sh
+++ 3ds-nightly/.ci/windows.sh
@@ -3,15 +3,12 @@
 mkdir build && cd build
 cmake .. -G Ninja \
     -DCMAKE_BUILD_TYPE=Release \
-    -DCMAKE_C_COMPILER_LAUNCHER=ccache \
-    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
+    -DENABLE_WEB_SERVICE=0 \
+    -DENABLE_TESTS=0 \
+    -DENABLE_QT_UPDATER=0 \
     -DENABLE_QT_TRANSLATION=ON \
     -D@VERBOTEN@_ENABLE_COMPATIBILITY_REPORTING=ON \
     -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON \
     -DUSE_DISCORD_PRESENCE=ON
 ninja
 ninja bundle
-
-ccache -s -v
-
-ctest -VV -C Release || echo "::error ::Test error occurred on Windows build"
--- 3ds-nightly/src/@verboten@_qt/configuration/config.cpp
+++ 3ds-nightly/src/@verboten@_qt/configuration/config.cpp
@@ -834,20 +834,10 @@
 }
 
 void Config::ReadWebServiceValues() {
-    qt_config->beginGroup(QStringLiteral("WebService"));
-
-    NetSettings::values.enable_telemetry =
-        ReadSetting(QStringLiteral("enable_telemetry"), false).toBool();
-    NetSettings::values.web_api_url =
-        ReadSetting(QStringLiteral("web_api_url"), QStringLiteral("https://api.@verboten@-emu.org"))
-            .toString()
-            .toStdString();
-    NetSettings::values.@verboten@_username =
-        ReadSetting(QStringLiteral("@verboten@_username")).toString().toStdString();
-    NetSettings::values.@verboten@_token =
-        ReadSetting(QStringLiteral("@verboten@_token")).toString().toStdString();
+    NetSettings::values.enable_telemetry = false;
+    NetSettings::values.web_api_url = std::string("");
+    NetSettings::values.@verboten@_username = std::string("");
+    NetSettings::values.@verboten@_token = std::string("");
-
-    qt_config->endGroup();
 }
 
 void Config::SaveValues() {
@@ -857,7 +851,6 @@
         SaveDataStorageValues();
         SaveMiscellaneousValues();
         SaveDebuggingValues();
-        SaveWebServiceValues();
         SaveVideoDumpingValues();
     }
 
--- 3ds-nightly/src/@verboten@_qt/main.cpp
+++ 3ds-nightly/src/@verboten@_qt/main.cpp
@@ -914,8 +914,6 @@
     connect(ui->action_Show_Status_Bar, &QAction::triggered, statusBar(), &QStatusBar::setVisible);
 
     // Multiplayer
-    connect(ui->action_View_Lobby, &QAction::triggered, multiplayer_state,
-            &MultiplayerState::OnViewLobby);
     connect(ui->action_Start_Room, &QAction::triggered, multiplayer_state,
             &MultiplayerState::OnCreateRoom);
     connect(ui->action_Leave_Room, &QAction::triggered, multiplayer_state,
--- 3ds-nightly/src/@verboten@_qt/main.ui
+++ 3ds-nightly/src/@verboten@_qt/main.ui
@@ -158,7 +158,6 @@
     <property name="title">
      <string>Multiplayer</string>
     </property>
-    <addaction name="action_View_Lobby"/>
     <addaction name="action_Start_Room"/>
     <addaction name="action_Connect_To_Room"/>
     <addaction name="separator"/>
--- 3ds-nightly/src/@verboten@_qt/configuration/configure_web.ui
+++ 3ds-nightly/src/@verboten@_qt/configuration/configure_web.ui
@@ -15,163 +15,6 @@
   </property>
   <layout class="QVBoxLayout" name="verticalLayout">
    <item>
-    <layout class="QVBoxLayout" name="verticalLayout_3">
-     <item>
-      <widget class="QGroupBox" name="groupBoxWebConfig">
-       <property name="title">
-        <string>@Verboten@ Web Service</string>
-       </property>
-       <layout class="QVBoxLayout" name="verticalLayout@Verboten@WebService">
-        <item>
-         <widget class="QLabel" name="web_credentials_disclaimer">
-          <property name="text">
-           <string>By providing your username and token, you agree to allow @Verboten@ to collect additional usage data, which may include user identifying information.</string>
-          </property>
-         </widget>
-        </item>
-        <item>
-         <layout class="QGridLayout" name="gridLayout@Verboten@Username">
-          <item row="2" column="3">
-           <widget class="QPushButton" name="button_verify_login">
-            <property name="sizePolicy">
-             <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
-              <horstretch>0</horstretch>
-              <verstretch>0</verstretch>
-             </sizepolicy>
-            </property>
-            <property name="layoutDirection">
-             <enum>Qt::RightToLeft</enum>
-            </property>
-            <property name="text">
-             <string>Verify</string>
-            </property>
-           </widget>
-          </item>
-          <item row="2" column="0">
-           <widget class="QLabel" name="web_signup_link">
-            <property name="text">
-             <string>Sign up</string>
-            </property>
-           </widget>
-          </item>
-          <item row="0" column="1" colspan="3">
-           <widget class="QLabel" name="username"/>
-          </item>
-          <item row="1" column="0">
-           <widget class="QLabel" name="label_token">
-            <property name="text">
-             <string>Token: </string>
-            </property>
-           </widget>
-          </item>
-          <item row="1" column="4">
-           <widget class="QLabel" name="label_token_verified"/>
-          </item>
-          <item row="0" column="0">
-           <widget class="QLabel" name="label_username">
-            <property name="text">
-             <string>Username: </string>
-            </property>
-           </widget>
-          </item>
-          <item row="1" column="1" colspan="3">
-           <widget class="QLineEdit" name="edit_token">
-            <property name="maxLength">
-             <number>80</number>
-            </property>
-            <property name="echoMode">
-             <enum>QLineEdit::Password</enum>
-            </property>
-           </widget>
-          </item>
-          <item row="2" column="1">
-           <widget class="QLabel" name="web_token_info_link">
-            <property name="text">
-             <string>What is my token?</string>
-            </property>
-           </widget>
-          </item>
-          <item row="2" column="2">
-           <spacer name="horizontalSpacer">
-            <property name="orientation">
-             <enum>Qt::Horizontal</enum>
-            </property>
-            <property name="sizeHint" stdset="0">
-             <size>
-              <width>40</width>
-              <height>20</height>
-             </size>
-            </property>
-           </spacer>
-          </item>
-         </layout>
-        </item>
-       </layout>
-      </widget>
-     </item>
-     <item>
-      <widget class="QLabel" name="label_disable_info">
-       <property name="text">
-        <string>Web Service configuration can only be changed when a public room isn't being hosted.</string>
-       </property>
-       <property name="wordWrap">
-        <bool>true</bool>
-       </property>
-      </widget>
-     </item>
-     <item>
-      <widget class="QGroupBox" name="groupBox">
-       <property name="title">
-        <string>Telemetry</string>
-       </property>
-       <layout class="QVBoxLayout" name="verticalLayout_2">
-        <item>
-         <widget class="QCheckBox" name="toggle_telemetry">
-          <property name="text">
-           <string>Share anonymous usage data with the @Verboten@ team</string>
-          </property>
-         </widget>
-        </item>
-        <item>
-         <widget class="QLabel" name="telemetry_learn_more">
-          <property name="text">
-           <string>Learn more</string>
-          </property>
-         </widget>
-        </item>
-        <item>
-         <layout class="QGridLayout" name="gridLayoutTelemetryId">
-          <item row="0" column="0">
-           <widget class="QLabel" name="label_telemetry_id">
-            <property name="text">
-             <string>Telemetry ID:</string>
-            </property>
-           </widget>
-          </item>
-          <item row="0" column="1">
-           <widget class="QPushButton" name="button_regenerate_telemetry_id">
-            <property name="sizePolicy">
-             <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
-              <horstretch>0</horstretch>
-              <verstretch>0</verstretch>
-             </sizepolicy>
-            </property>
-            <property name="layoutDirection">
-             <enum>Qt::RightToLeft</enum>
-            </property>
-            <property name="text">
-             <string>Regenerate</string>
-            </property>
-           </widget>
-          </item>
-         </layout>
-        </item>
-       </layout>
-      </widget>
-     </item>
-    </layout>
-   </item>
-   <item>
     <widget class="QGroupBox" name="discord_group">
      <property name="title">
       <string>Discord Presence</string>
@@ -203,10 +46,6 @@
   </layout>
  </widget>
  <tabstops>
-  <tabstop>edit_token</tabstop>
-  <tabstop>button_verify_login</tabstop>
-  <tabstop>toggle_telemetry</tabstop>
-  <tabstop>button_regenerate_telemetry_id</tabstop>
   <tabstop>toggle_discordrpc</tabstop>
  </tabstops>
  <resources/>
--- 3ds-nightly/src/@verboten@_qt/configuration/configure_web.cpp
+++ 3ds-nightly/src/@verboten@_qt/configuration/configure_web.cpp
@@ -11,38 +11,9 @@
 #include "network/network_settings.h"
 #include "ui_configure_web.h"
 
-static constexpr char token_delimiter{':'};
-
-static std::string GenerateDisplayToken(const std::string& username, const std::string& token) {
-    if (username.empty() || token.empty()) {
-        return {};
-    }
-
-    const std::string unencoded_display_token{username + token_delimiter + token};
-    QByteArray b{unencoded_display_token.c_str()};
-    QByteArray b64 = b.toBase64();
-    return b64.toStdString();
-}
-
-static std::string UsernameFromDisplayToken(const std::string& display_token) {
-    const std::string unencoded_display_token{
-        QByteArray::fromBase64(display_token.c_str()).toStdString()};
-    return unencoded_display_token.substr(0, unencoded_display_token.find(token_delimiter));
-}
-
-static std::string TokenFromDisplayToken(const std::string& display_token) {
-    const std::string unencoded_display_token{
-        QByteArray::fromBase64(display_token.c_str()).toStdString()};
-    return unencoded_display_token.substr(unencoded_display_token.find(token_delimiter) + 1);
-}
-
 ConfigureWeb::ConfigureWeb(QWidget* parent)
     : QWidget(parent), ui(std::make_unique<Ui::ConfigureWeb>()) {
     ui->setupUi(this);
-    connect(ui->button_regenerate_telemetry_id, &QPushButton::clicked, this,
-            &ConfigureWeb::RefreshTelemetryID);
-    connect(ui->button_verify_login, &QPushButton::clicked, this, &ConfigureWeb::VerifyLogin);
-    connect(&verify_watcher, &QFutureWatcher<bool>::finished, this, &ConfigureWeb::OnLoginVerified);
 
 #ifndef USE_DISCORD_PRESENCE
     ui->discord_group->setVisible(false);
@@ -53,113 +24,9 @@
 ConfigureWeb::~ConfigureWeb() = default;
 
 void ConfigureWeb::SetConfiguration() {
-    ui->web_credentials_disclaimer->setWordWrap(true);
-    ui->telemetry_learn_more->setOpenExternalLinks(true);
-    ui->telemetry_learn_more->setText(tr("<a "
-                                         "href='https://@verboten@-emu.org/entry/"
-                                         "telemetry-and-why-thats-a-good-thing/'><span "
-                                         "style=\"text-decoration: underline; "
-                                         "color:#039be5;\">Learn more</span></a>"));
-
-    ui->web_signup_link->setOpenExternalLinks(true);
-    ui->web_signup_link->setText(
-        tr("<a href='https://profile.@verboten@-emu.org/'><span style=\"text-decoration: underline; "
-           "color:#039be5;\">Sign up</span></a>"));
-    ui->web_token_info_link->setOpenExternalLinks(true);
-    ui->web_token_info_link->setText(
-        tr("<a href='https://@verboten@-emu.org/wiki/@verboten@-web-service/'><span style=\"text-decoration: "
-           "underline; color:#039be5;\">What is my token?</span></a>"));
-
-    ui->toggle_telemetry->setChecked(NetSettings::values.enable_telemetry);
-
-    if (NetSettings::values.@verboten@_username.empty()) {
-        ui->username->setText(tr("Unspecified"));
-    } else {
-        ui->username->setText(QString::fromStdString(NetSettings::values.@verboten@_username));
-    }
-
-    ui->edit_token->setText(QString::fromStdString(
-        GenerateDisplayToken(NetSettings::values.@verboten@_username, NetSettings::values.@verboten@_token)));
-
-    // Connect after setting the values, to avoid calling OnLoginChanged now
-    connect(ui->edit_token, &QLineEdit::textChanged, this, &ConfigureWeb::OnLoginChanged);
-    ui->label_telemetry_id->setText(
-        tr("Telemetry ID: 0x%1").arg(QString::number(Core::GetTelemetryId(), 16).toUpper()));
-    user_verified = true;
-
     ui->toggle_discordrpc->setChecked(UISettings::values.enable_discord_presence.GetValue());
 }
 
-void ConfigureWeb::ApplyConfiguration() {
-    NetSettings::values.enable_telemetry = ui->toggle_telemetry->isChecked();
-    UISettings::values.enable_discord_presence = ui->toggle_discordrpc->isChecked();
-    if (user_verified) {
-        NetSettings::values.@verboten@_username =
-            UsernameFromDisplayToken(ui->edit_token->text().toStdString());
-        NetSettings::values.@verboten@_token =
-            TokenFromDisplayToken(ui->edit_token->text().toStdString());
-    } else {
-        QMessageBox::warning(
-            this, tr("Token not verified"),
-            tr("Token was not verified. The change to your token has not been saved."));
-    }
-}
-
-void ConfigureWeb::RefreshTelemetryID() {
-    const u64 new_telemetry_id{Core::RegenerateTelemetryId()};
-    ui->label_telemetry_id->setText(
-        tr("Telemetry ID: 0x%1").arg(QString::number(new_telemetry_id, 16).toUpper()));
-}
-
-void ConfigureWeb::OnLoginChanged() {
-    if (ui->edit_token->text().isEmpty()) {
-        user_verified = true;
-
-        const QPixmap pixmap = QIcon::fromTheme(QStringLiteral("checked")).pixmap(16);
-        ui->label_token_verified->setPixmap(pixmap);
-    } else {
-        user_verified = false;
-
-        const QPixmap pixmap = QIcon::fromTheme(QStringLiteral("failed")).pixmap(16);
-        ui->label_token_verified->setPixmap(pixmap);
-    }
-}
-
-void ConfigureWeb::VerifyLogin() {
-    ui->button_verify_login->setDisabled(true);
-    ui->button_verify_login->setText(tr("Verifying..."));
-    verify_watcher.setFuture(QtConcurrent::run(
-        [username = UsernameFromDisplayToken(ui->edit_token->text().toStdString()),
-         token = TokenFromDisplayToken(ui->edit_token->text().toStdString())] {
-            return Core::VerifyLogin(username, token);
-        }));
-}
-
-void ConfigureWeb::OnLoginVerified() {
-    ui->button_verify_login->setEnabled(true);
-    ui->button_verify_login->setText(tr("Verify"));
-    if (verify_watcher.result()) {
-        user_verified = true;
-
-        const QPixmap pixmap = QIcon::fromTheme(QStringLiteral("checked")).pixmap(16);
-        ui->label_token_verified->setPixmap(pixmap);
-        ui->username->setText(
-            QString::fromStdString(UsernameFromDisplayToken(ui->edit_token->text().toStdString())));
-    } else {
-        const QPixmap pixmap = QIcon::fromTheme(QStringLiteral("failed")).pixmap(16);
-        ui->label_token_verified->setPixmap(pixmap);
-        ui->username->setText(tr("Unspecified"));
-        QMessageBox::critical(this, tr("Verification failed"),
-                              tr("Verification failed. Check that you have entered your token "
-                                 "correctly, and that your internet connection is working."));
-    }
-}
-
 void ConfigureWeb::RetranslateUI() {
     ui->retranslateUi(this);
 }
-
-void ConfigureWeb::SetWebServiceConfigEnabled(bool enabled) {
-    ui->label_disable_info->setVisible(!enabled);
-    ui->groupBoxWebConfig->setEnabled(enabled);
-}
--- 3ds-nightly/src/@verboten@_qt/configuration/configure_web.h
+++ 3ds-nightly/src/@verboten@_qt/configuration/configure_web.h
@@ -5,7 +5,6 @@
 #pragma once
 
 #include <memory>
-#include <QFutureWatcher>
 #include <QWidget>
 
 namespace Ui {
@@ -19,19 +18,9 @@
     explicit ConfigureWeb(QWidget* parent = nullptr);
     ~ConfigureWeb() override;
 
-    void ApplyConfiguration();
     void RetranslateUI();
     void SetConfiguration();
-    void SetWebServiceConfigEnabled(bool enabled);
 
 private:
-    void RefreshTelemetryID();
-    void OnLoginChanged();
-    void VerifyLogin();
-    void OnLoginVerified();
-
-    bool user_verified = true;
-    QFutureWatcher<bool> verify_watcher;
-
     std::unique_ptr<Ui::ConfigureWeb> ui;
 };
--- 3ds-nightly/src/@verboten@_qt/configuration/configure_dialog.cpp
+++ 3ds-nightly/src/@verboten@_qt/configuration/configure_dialog.cpp
@@ -57,7 +57,6 @@
     ui->tabWidget->addTab(ui_tab.get(), tr("UI"));
 
     hotkeys_tab->Populate(registry);
-    web_tab->SetWebServiceConfigEnabled(enable_web_config);
 
     PopulateSelectionList();
 
@@ -106,7 +105,6 @@
     audio_tab->ApplyConfiguration();
     camera_tab->ApplyConfiguration();
     debug_tab->ApplyConfiguration();
-    web_tab->ApplyConfiguration();
     ui_tab->ApplyConfiguration();
     storage_tab->ApplyConfiguration();
     system.ApplySettings();
--- 3ds-nightly/src/@verboten@_qt/multiplayer/host_room.ui
+++ 3ds-nightly/src/@verboten@_qt/multiplayer/host_room.ui
@@ -178,20 +178,6 @@
       </spacer>
      </item>
      <item>
-      <widget class="QComboBox" name="host_type">
-       <item>
-        <property name="text">
-         <string>Public</string>
-        </property>
-       </item>
-       <item>
-        <property name="text">
-         <string>Unlisted</string>
-        </property>
-       </item>
-      </widget>
-     </item>
-     <item>
       <widget class="QPushButton" name="host">
        <property name="text">
         <string>Host Room</string>
--- 3ds-nightly/src/@verboten@_qt/multiplayer/host_room.cpp
+++ 3ds-nightly/src/@verboten@_qt/multiplayer/host_room.cpp
@@ -59,11 +59,7 @@
     ui->room_name->setText(UISettings::values.room_name);
     ui->port->setText(UISettings::values.room_port);
     ui->max_player->setValue(UISettings::values.max_player);
-    int index = UISettings::values.host_type;
-    if (index < ui->host_type->count()) {
-        ui->host_type->setCurrentIndex(index);
-    }
-    index = ui->game_list->findData(UISettings::values.game_id, GameListItemPath::ProgramIdRole);
+    int index = ui->game_list->findData(UISettings::values.game_id, GameListItemPath::ProgramIdRole);
     if (index != -1) {
         ui->game_list->setCurrentIndex(index);
     }
@@ -135,7 +131,7 @@
         auto game_id = ui->game_list->currentData(GameListItemPath::ProgramIdRole).toLongLong();
         auto port = ui->port->isModified() ? ui->port->text().toInt() : Network::DefaultRoomPort;
         auto password = ui->password->text().toStdString();
-        const bool is_public = ui->host_type->currentIndex() == 0;
+        constexpr bool is_public = false;
         Network::Room::BanList ban_list{};
         if (ui->load_ban_list->isChecked()) {
             ban_list = UISettings::values.ban_list;
@@ -205,7 +201,6 @@
             ui->game_list->currentData(GameListItemPath::ProgramIdRole).toLongLong();
         UISettings::values.max_player = ui->max_player->value();
 
-        UISettings::values.host_type = ui->host_type->currentIndex();
         UISettings::values.room_port = (ui->port->isModified() && !ui->port->text().isEmpty())
                                            ? ui->port->text()
                                            : QString::number(Network::DefaultRoomPort);
--- 3ds-nightly/src/@verboten@_qt/multiplayer/state.cpp
+++ 3ds-nightly/src/@verboten@_qt/multiplayer/state.cpp
@@ -268,9 +268,6 @@
             return;
         }
     }
-    // If the user is not a member of a room, show the lobby instead.
-    // This is currently only used on the clickable label in the status bar
-    OnViewLobby();
 }
 
 void MultiplayerState::OnDirectConnectToRoom() {
